name: Deploy Turbo Monorepo to Vercel

on:
  push:
    branches:
      - main

jobs:
  deploy-nextjs:
    name: Deploy Next.js App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install pnpm
        run: corepack enable

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Turbo Repo
        run: pnpm turbo run build --filter=apps/web

      - name: Build Docker Image
        run: |
          docker build -t nextjs-app -f apps/web/Dockerfile .
          echo ${{ secrets.VERCEL_TOKEN }} | docker login --username ${{ secrets.VERCEL_ORG_ID }} --password-stdin registry.vercel.app

      - name: Push Docker Image
        run: |
          docker tag nextjs-app registry.vercel.app/${{ secrets.VERCEL_ORG_ID }}/web
          docker push registry.vercel.app/${{ secrets.VERCEL_ORG_ID }}/web

  deploy-storybook:
    name: Deploy Storybook
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install pnpm
        run: corepack enable

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Turbo Repo
        run: pnpm turbo run build --filter=packages/ui

      - name: Build Docker Image
        run: |
          docker build -t storybook-ui -f packages/ui/Dockerfile .
          echo ${{ secrets.VERCEL_TOKEN }} | docker login --username ${{ secrets.VERCEL_ORG_ID }} --password-stdin registry.vercel.app

      - name: Push Docker Image
        run: |
          docker tag storybook-ui registry.vercel.app/${{ secrets.VERCEL_ORG_ID }}/ui
          docker push registry.vercel.app/${{ secrets.VERCEL_ORG_ID }}/ui
